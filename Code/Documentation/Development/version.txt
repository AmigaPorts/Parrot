Parrot Version
# Parrot Version

Parrot uses the sematic versioning system where a given 
version number is written as:

  GAME.FEATURE.BUILD


GAME versions correspond to which minimum Game Parrot
supports, these are:-

   1. Maniac Mansion (1987)
      CBM Amiga Version - Lucasfilms Games
   2. Zak McKracken and the Alien Mindbenders (1988)
      CBM Amiga Version - Lucasfilms Games
   3. Indiana Jones and the Last Crusade (1989)
      CBM Amiga Version - Lucasfilms Games
   4. Loom (1990)
      CBM Amiga Version - Lucasfilms Games
   5. The Secret of Monkey Island (1990)
      CBM Amiga Version - Lucasfilms Games
   6. Monkey Island 2: LeChuck's Revenge (1991)
      CBM Amiga Version - Lucasfilms Games
   7. Indiana Jones and the Fate of Atlantis (1992)
      CBM Amiga Version - Lucasfilms Games
   8. Day of the Tentacle (1993)
      PC DOS Version - LucasArts
   9. Sam & Max Hit the Road (1993)
      PC DOS Version - LucasArts
  10. Full Throttle (1995)
      PC DOS Version - LucasArts
  11. The Dig (1995)
      PC DOS Version - LucasArts
  12. The Curse of Monkey Island (1997)
      MS Windows Version - LucasArts

Files saved via older GAME versions are expected 
to be incompatible with newer GAME versions.

  i.e.  Parrot files saved with version 3.9.3 are
        likely not to work with with Parrot 2.0.1

        However; Parrot 3.9.3, can play Maniac Mansion,
        Zak McKracken and the Alien MindBenders and
        Indiana Jones and the Last Crusade.

FEATURE versions are incremented when a feature of
that Game has been totally completed. This is expected
to have backwards compatbile manner.

BUILD versions are incremented when a commit has been
pushed to the Git and Github repository. Although a 
1:1 parity is not expected. BUILD versions are stored
as a two byte integer, and can roll over if the number
of commits reaches 65,535.

## C Implementation

Internally a VERSION_INFO union is used which is represents
a version number as a C Struct or a PtUnsigned32 (in Big Endian)

  union VERSION_INFO
  {
    struct
    {
      PtUnsigned8 gv_Game;
      PtUnsigned8 gv_Feature;
      PtUnsigned8 gv_Build;
    } gv_Version;
    PtUnsigned32 gv_Num;
  };

To determine if a a Version is older or newer, the gv_Num field
can be compared with <, > or == operators.

